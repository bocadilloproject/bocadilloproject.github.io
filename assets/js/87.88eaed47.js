(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{422:function(t,e,s){"use strict";s.r(e);var a=s(6),n=Object(a.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"tutorial"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tutorial","aria-hidden":"true"}},[t._v("#")]),t._v(" Tutorial")]),t._v(" "),s("p",[t._v("You "),s("router-link",{attrs:{to:"/guide/installation.html"}},[t._v("installed Bocadillo")]),t._v(" and "),s("router-link",{attrs:{to:"/guide/async.html"}},[t._v("got up to speed with async in Python")]),t._v("? Perfect! Let us take you on a guided tour on how to work with Bocadillo.")],1),t._v(" "),s("p",[t._v("In this step-by-step tutorial, we will build a "),s("strong",[t._v("chatbot server")]),t._v(" together.")]),t._v(" "),s("p",[t._v("We'll go through many aspects of building apps with Bocadillo, including:")]),t._v(" "),s("ul",[s("li",[t._v("Generating a project using the "),s("a",{attrs:{href:"https://github.com/bocadilloproject/bocadillo-cli",target:"_blank",rel:"noopener noreferrer"}},[t._v("Bocadillo CLI"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("li",[t._v("Using the built-in "),s("strong",[t._v("WebSocket")]),t._v(" support to handle multiple connections in real-time.")]),t._v(" "),s("li",[t._v("Creating "),s("strong",[t._v("REST endpoints")]),t._v(" using routing and views.")]),t._v(" "),s("li",[t._v("Using "),s("strong",[t._v("providers")]),t._v(" to inject reusable resources into views.")]),t._v(" "),s("li",[s("strong",[t._v("Testing")]),t._v(" an application using "),s("a",{attrs:{href:"https://docs.pytest.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("pytest"),s("OutboundLink")],1),t._v(".")])]),t._v(" "),s("p",[t._v("We'll use the "),s("a",{attrs:{href:"https://github.com/gunthercox/ChatterBot",target:"_blank",rel:"noopener noreferrer"}},[t._v("ChatterBot"),s("OutboundLink")],1),t._v(" library to build "),s("strong",[t._v("Diego")]),t._v(", a friendly conversational agent. Don't worry, this won't require "),s("em",[t._v("any")]),t._v(" background in data science nor chatbot technology!")]),t._v(" "),s("p",[t._v("Sounds exciting? Let's dive in! 🙌")]),t._v(" "),s("h2",{attrs:{id:"setting-up-the-project"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setting-up-the-project","aria-hidden":"true"}},[t._v("#")]),t._v(" Setting up the project")]),t._v(" "),s("p",[t._v("First things first: let's set up our project.")]),t._v(" "),s("ol",[s("li",[t._v("Open up a terminal, and go to your favorite development directory. For example")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cd")]),t._v(" ~/dev\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("Install the "),s("a",{attrs:{href:"https://github.com/bocadilloproject/bocadillo-cli",target:"_blank",rel:"noopener noreferrer"}},[t._v("Bocadillo CLI"),s("OutboundLink")],1),t._v(" globally:")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("pip "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" bocadillo-cli\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("Use the CLI to generate a new project called "),s("code",[t._v("chatbot")]),t._v(":")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("bocadillo create chatbot\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[t._v("Run "),s("code",[t._v("cd chatbot")]),t._v(", and you should have the following directory structure:")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ tree\n.\n├── .gitignore\n├── README.md\n├── requirements.txt\n└── chatbot\n    ├── __init__.py\n    ├── app.py\n    ├── asgi.py\n    ├── providerconf.py\n    └── settings.py\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[t._v("Edit "),s("code",[t._v("requirements.txt")]),t._v(" to add Chatterbot there:")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("bocadillo >= 0.14\nchatterbot\npytz  # Required by Chatterbot\n")])])]),s("ol",{attrs:{start:"5"}},[s("li",[t._v("Install dependencies. We're just using pip and a virtualenv here, but you can use any other dependency management solution:")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("python -m venv venv\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("source")]),t._v(" venv/bin/activate\npip "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -r requirements.txt\n")])])]),s("h2",{attrs:{id:"serving-the-application"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#serving-the-application","aria-hidden":"true"}},[t._v("#")]),t._v(" Serving the application")]),t._v(" "),s("p",[t._v("Once this is all done, let's try and serve the app before we go any further. Run the following command:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("uvicorn chatbot.asgi:app\n")])])]),s("p",[t._v("If you go to "),s("a",{attrs:{href:"http://localhost:8000",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost:8000"),s("OutboundLink")],1),t._v(" and get a "),s("code",[t._v("404 Not Found")]),t._v(" response, you're all good! Enter "),s("code",[t._v("Ctrl+C")]),t._v(" in your terminal to stop the server.")]),t._v(" "),s("h2",{attrs:{id:"writing-the-websocket-endpoint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writing-the-websocket-endpoint","aria-hidden":"true"}},[t._v("#")]),t._v(" Writing the WebSocket endpoint")]),t._v(" "),s("p",[t._v("We're now ready to get to the meat of it! The first thing we'll build is the WebSocket endpoint.")]),t._v(" "),s("p",[t._v("If you're not familiar with WebSocket, don't worry — here's a 10-word summary: it allows a server and a client to exchange messages in a bidirectional way. It's good old sockets reinvented for the web.")]),t._v(" "),s("p",[t._v("Due to their "),s("strong",[t._v("bidirectional nature")]),t._v(", they're very suitable for the kind of application we're building here — some sort of "),s("em",[t._v("conversation")]),t._v(" between a client and a server (i.e. our chatbot).")]),t._v(" "),s("p",[t._v("If you're interested in learning more about WebSockets in Python, I strongly recommend this talk: "),s("a",{attrs:{href:"https://www.youtube.com/watch?v=PjiXkJ6P9pQ",target:"_blank",rel:"noopener noreferrer"}},[t._v("A beginner's guide to WebSockets"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("p",[t._v("Alright, so we're not going to plug the chatbot in just yet. Instead, let's make the server send back any message it receives — a behavior also known as an \"echo\" endpoint.")]),t._v(" "),s("p",[t._v("Add the following at the end of "),s("code",[t._v("app.py")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# chatbot/app.py")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n@app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("websocket_route"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/conversation"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("converse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ws"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" message "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" ws"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" ws"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("send"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("A few minimal explanations here, for the curious:")]),t._v(" "),s("ul",[s("li",[t._v("This defines a WebSocket endpoint accessible at the "),s("code",[t._v("ws://localhost:8000/conversation")]),t._v(" location.")]),t._v(" "),s("li",[t._v("The "),s("code",[t._v("async for message in ws:")]),t._v(" line iterates over messages received over the WebSocket.")]),t._v(" "),s("li",[t._v("Lastly, "),s("code",[t._v("await ws.send(message)")]),t._v(" sends the received "),s("code",[t._v("message")]),t._v(" as-is back to the client.")])]),t._v(" "),s("h2",{attrs:{id:"trying-out-the-websocket-endpoint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#trying-out-the-websocket-endpoint","aria-hidden":"true"}},[t._v("#")]),t._v(" Trying out the WebSocket endpoint")]),t._v(" "),s("p",[t._v("How about we try this out by creating a WebSocket client? Fear not — we don't need to write any JavaScript. We'll stick to Python and use the "),s("a",{attrs:{href:"https://websockets.readthedocs.io",target:"_blank",rel:"noopener noreferrer"}},[t._v("websockets"),s("OutboundLink")],1),t._v(" library, which comes installed with Bocadillo.")]),t._v(" "),s("p",[t._v("Create a "),s("code",[t._v("client.py")]),t._v(" file in the project root directory, and paste the following code there. It connects to the WebSocket endpoint and runs a simple REPL:")]),t._v(" "),s("div",{staticClass:"language-py extra-class"},[s("pre",{pre:!0,attrs:{class:"language-py"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# client.py")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" asyncio\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" contextlib "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" suppress\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" websockets\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("client")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" websockets"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" websocket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            message "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("input")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"> "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" websocket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("send"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            response "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" websocket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("recv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" suppress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("KeyboardInterrupt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3.7+. See asyncio docs for <3.7 usage.")]),t._v("\n    asyncio"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("client"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ws://localhost:8000/conversation"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("Serve the app again and, in a separate terminal, run "),s("code",[t._v("$ python client.py")]),t._v(". You should be greeted with a "),s("code",[t._v(">")]),t._v(" prompt. If so, start chattin'!")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("> Hi!\nHi!\n> Is there anyone here?\nIs there anyone here?\n>\n")])])]),s("p",[t._v("Pretty cool, isn't it? 🤓")]),t._v(" "),s("p",[t._v("Type "),s("code",[t._v("Ctrl+C")]),t._v(" to exit the session and close the WebSocket connection.")]),t._v(" "),s("h2",{attrs:{id:"hello-diego"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hello-diego","aria-hidden":"true"}},[t._v("#")]),t._v(" Hello, Diego!")]),t._v(" "),s("p",[t._v("Now that we're able to make the server and a client communicate, how about we replace the echo implementation with an actual, intelligent and friendly chatbot?")]),t._v(" "),s("p",[t._v("This is where "),s("a",{attrs:{href:"https://github.com/gunthercox/ChatterBot",target:"_blank",rel:"noopener noreferrer"}},[t._v("ChatterBot"),s("OutboundLink")],1),t._v(" comes in! We'll create a chatbot named "),s("strong",[t._v("Diego")]),t._v(".")]),t._v(" "),s("p",[t._v("Go ahead and create a "),s("code",[t._v("bot.py")]),t._v(" file, and add Diego in there:")]),t._v(" "),s("div",{staticClass:"language-py extra-class"},[s("pre",{pre:!0,attrs:{class:"language-py"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# chatbot/bot.py")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" chatterbot "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" ChatBot\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" chatterbot"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("trainers "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" ChatterBotCorpusTrainer\n\ndiego "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ChatBot"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Diego"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ntrainer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ChatterBotCorpusTrainer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("diego"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntrainer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("train"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"chatterbot.corpus.english.greetings"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"chatterbot.corpus.english.conversations"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("(ChatterBot's chatbots are quite dumb out of the box, so the code above trains Diego on an English corpus to make him a bit smarter.)")]),t._v(" "),s("p",[t._v("At this point, you can try out the chatbot in a Python interpreter:")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("$ python\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" chatbot"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bot "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" diego  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Be patient — this may take a few seconds to load!")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" diego"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hi, there!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Statement text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("There should be one"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" preferably only one "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("obvious way to do it"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("(Hmm. Interesting response! 🐍)")]),t._v(" "),s("p",[t._v("Let's now plug Diego into the WebSocket endpoint: each time we receive a new "),s("code",[t._v("message")]),t._v(", we'll give it to Diego and send his response back.")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# chatbot/app.py")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bot "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" diego\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n@app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("websocket_route"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/conversation"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("converse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ws"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" message "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" ws"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        response "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" diego"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" ws"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("send"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("If you run the "),s("a",{attrs:{href:"#trying-out-the-websocket-endpoint"}},[t._v("server/client setup")]),t._v(" from earlier, you can now see that Diego converses with us over the WebSocket!")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("> Hi there!\nI am a chat bot. I am the original chat bot. Did you know that I am incapable of error?\n> Where are you?\nI am on the Internet.\n>\n")])])]),s("p",[t._v("Looks like Diego is a jokester. 😉")]),t._v(" "),s("h2",{attrs:{id:"refactoring-the-chatbot-as-a-provider"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#refactoring-the-chatbot-as-a-provider","aria-hidden":"true"}},[t._v("#")]),t._v(" Refactoring the chatbot as a provider")]),t._v(" "),s("p",[t._v("Clients are now able to chat with Diego over a WebSocket connection. That's great!")]),t._v(" "),s("p",[t._v("However, there are a few non-functional issues with our current setup. If you think about it, Diego is a "),s("strong",[t._v("resource")]),t._v(" — ideally, it should only be made available to the WebSocket endpoint at the time of processing a connection request. Instead, we load it as soon as the "),s("code",[t._v("app")]),t._v(" module gets imported. Plus, it is injected as a global dependency which makes the code hard to test and less readable.")]),t._v(" "),s("p",[t._v("So, there must be a better way… and there is: "),s("router-link",{attrs:{to:"/guide/providers.html"}},[t._v("providers")]),t._v(". ✨")],1),t._v(" "),s("p",[t._v("Providers are quite unique to Bocadillo. They were inspired by "),s("a",{attrs:{href:"https://docs.pytest.org/en/latest/fixture.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("pytest fixtures"),s("OutboundLink")],1),t._v(" and offer an elegant, modular and flexible way to "),s("strong",[t._v("manage and inject resources into web views")]),t._v(".")]),t._v(" "),s("p",[t._v("Let's use them to fix the code, shall we?")]),t._v(" "),s("p",[t._v("Open the "),s("code",[t._v("providerconf.py")]),t._v(" module that was generated by the CLI, and add the following code:")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# chatbot/providerconf.py")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" bocadillo "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" provider\n\n@provider"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("scope"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"app"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diego")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bot "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" diego\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" diego\n")])])]),s("p",[t._v("This code declares a "),s("code",[t._v("diego")]),t._v(" provider which lazily loads the chatbot on app startup (hence "),s("code",[t._v('scope="app"')]),t._v(").")]),t._v(" "),s("p",[t._v("We can now "),s("strong",[t._v("inject")]),t._v(" Diego into the WebSocket view. All we have to do is declare it as a "),s("strong",[t._v("parameter")]),t._v(" to the view. Let's do just that by updating the "),s("code",[t._v("app.py")]),t._v(" script, which is listed here in full:")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# chatbot/app.py")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" bocadillo "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" App\n\napp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" App"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n@app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("websocket_route"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/conversation"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("converse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ws"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" diego"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <-- 👋, Diego!")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" message "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" ws"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        response "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" diego"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" ws"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("send"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("No imports required — Diego will "),s("em",[t._v("automagically")]),t._v(" get injected in the WebSocket view when processing the WebSocket connection request. ✨")]),t._v(" "),s("p",[t._v("Ready to try things out?")]),t._v(" "),s("ol",[s("li",[t._v("Run the server. You should see additional logs corresponding to Bocadillo setting up Diego on startup:")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ uvicorn chatbot.asgi:app\nINFO: Started server process [29843]\nINFO: Waiting for application startup.\n[nltk_data] Downloading package averaged_perceptron_tagger to\n[nltk_data]     /Users/Florimond/nltk_data...\n[nltk_data]   Package averaged_perceptron_tagger is already up-to-\n[nltk_data]       date!\n[nltk_data] Downloading package punkt to /Users/Florimond/nltk_data...\n[nltk_data]   Package punkt is already up-to-date!\n[nltk_data] Downloading package stopwords to\n[nltk_data]     /Users/Florimond/nltk_data...\n[nltk_data]   Package stopwords is already up-to-date!\nTraining greetings.yml: [####################] 100%\nTraining conversations.yml: [####################] 100%\nINFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("Run the "),s("code",[t._v("client.py")]),t._v(" script again, and start chatting! You shouldn't see any difference from before. In particular, Diego responds just as fast.")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("> Hello!\nHi\n> I would like to order a sandwich\nYes it is.\n>\n")])])]),s("p",[t._v("There you go! Beautiful, modular and flexible "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Dependency_injection",target:"_blank",rel:"noopener noreferrer"}},[t._v("dependency injection"),s("OutboundLink")],1),t._v(" with Bocadillo providers.")]),t._v(" "),s("h2",{attrs:{id:"keeping-track-of-clients"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#keeping-track-of-clients","aria-hidden":"true"}},[t._v("#")]),t._v(" Keeping track of clients")]),t._v(" "),s("p",[t._v("Let's go one step further. True, we have quite elegantly implemented conversation with a chatbot over WebSocket. Now, how about we keep track of how many clients are currently talking to the chatbot?")]),t._v(" "),s("p",[t._v("If you were wondering, the answer is yes — we can implement this with providers too!")]),t._v(" "),s("ol",[s("li",[t._v("Add a "),s("code",[t._v("clients")]),t._v(" provider to "),s("code",[t._v("providerconf.py")]),t._v(":")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# chatbot/providerconf.py")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" bocadillo "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" provider\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n@provider"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("scope"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"app"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clients")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("Add another provider which returns a context manager that takes care of adding the "),s("code",[t._v("ws")]),t._v(" connection to the set of clients. FYI, this is an example of a "),s("router-link",{attrs:{to:"/guide/providers.html#factory-providers"}},[t._v("factory provider")]),t._v(", but you don't really need to understand the whole code at this point.")],1)]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# chatbot/providerconf.py")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" contextlib "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" contextmanager\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" bocadillo "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" provider\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n@provider\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("save_client")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("clients"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    @contextmanager\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_save")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ws"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        clients"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("add"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ws"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" ws\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            clients"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("remove"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ws"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" _save\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("In the WebSocket view, use the new "),s("code",[t._v("save_client")]),t._v(" provider to register the WebSocket client:")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# chatbot/app.py")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n@app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("websocket_route"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/conversation"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("converse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ws"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" diego"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" save_client"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" save_client"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ws"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" message "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" ws"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            response "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" diego"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" ws"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("send"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("That's it! While the client is chatting with Diego, it will be present in the set of "),s("code",[t._v("clients")]),t._v(".")]),t._v(" "),s("p",[t._v("How about we do something with this information?")]),t._v(" "),s("h2",{attrs:{id:"exposing-clients-count-via-a-rest-endpoint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#exposing-clients-count-via-a-rest-endpoint","aria-hidden":"true"}},[t._v("#")]),t._v(" Exposing clients count via a REST endpoint")]),t._v(" "),s("p",[t._v("As a final feature, let's step aside from WebSocket for a moment and go back to the good old HTTP protocol. We'll create a simple REST endpoint to view the number of currently connected clients.")]),t._v(" "),s("p",[t._v("Go back to "),s("code",[t._v("app.py")]),t._v(" and add the following code:")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# chatbot/app.py")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n@app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("route"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/client-count"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("client_count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" clients"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("json "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"count"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("clients"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Hopefully this code shouldn't come as a surprise. All we do here is send the number of "),s("code",[t._v("clients")]),t._v(" (obtained from the "),s("code",[t._v("clients")]),t._v(" provider) in a JSON response.")]),t._v(" "),s("p",[t._v("Go ahead! Run "),s("code",[t._v("uvicorn chatbot.asgi:app")]),t._v(", and a few "),s("code",[t._v("python client.py")]),t._v(" instances, and check out how many clients are connected by opening "),s("a",{attrs:{href:"http://localhost:8000/client-count",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost:8000/client-count"),s("OutboundLink")],1),t._v(" in a web browser. Press "),s("code",[t._v("Ctrl+C")]),t._v(" for one of the clients, and see the client count go down!")]),t._v(" "),s("p",[t._v("Did it work? Congrats! ✨")]),t._v(" "),s("h2",{attrs:{id:"testing"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#testing","aria-hidden":"true"}},[t._v("#")]),t._v(" Testing")]),t._v(" "),s("p",[t._v("We're mostly done in terms of the features we wanted to cover together. We have some ideas you can explore as exercises, of course, but before getting to that let's write some tests.")]),t._v(" "),s("p",[t._v("One of Bocadillo's design principles is to make it easy to write high-quality applications. As such, Bocadillo has all the tools built-in to write tests for this chatbot server.")]),t._v(" "),s("p",[t._v("You can write those with your favorite test framework. We'll choose "),s("a",{attrs:{href:"https://docs.pytest.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("pytest"),s("OutboundLink")],1),t._v(" for the purpose of this tutorial. Let's install it first:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("pip "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" pytest\n")])])]),s("p",[t._v("Next, create a tests package:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" tests\n")])])]),s("p",[t._v("We can now setup our testing environment:")]),t._v(" "),s("ul",[s("li",[t._v("We'll write a "),s("a",{attrs:{href:"https://docs.pytest.org/en/latest/fixture.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("pytest fixture"),s("OutboundLink")],1),t._v(" that sets up a test client. The test client exposes a Requests-like API as well as helpers to test WebSocket endpoints.")]),t._v(" "),s("li",[t._v("We don't actually need to test the chatbot here, so we'll override the "),s("code",[t._v("diego")]),t._v(' provider with an "echo" mock — this will have the nice side effect of greatly speeding up the tests.')])]),t._v(" "),s("p",[t._v("Go ahead and create a "),s("code",[t._v("conftest.py")]),t._v(" script and place the following in there:")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# tests/conftest.py")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" pytest\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" bocadillo "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" provider"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" create_client\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" chatbot"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("asgi "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" app\n\n@provider\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diego")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EchoDiego")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_response")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" query"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" query\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" EchoDiego"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n@pytest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fixture\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("client")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" create_client"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("Now is the time to write some tests! Create a "),s("code",[t._v("test_app.py")]),t._v(" file in the tests package:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("touch")]),t._v(" tests/test_app.py\n")])])]),s("p",[t._v("First, let's test that we can connect to the WebSocket endpoint, and that we get a response from Diego if we send a message:")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# tests/test_app.py")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test_connect_and_converse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("client"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" client"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("websocket_connect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/conversation"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" ws"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        ws"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("send_text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" ws"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("receive_text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello!"')]),t._v("\n")])])]),s("p",[t._v("Now, let's test the incrementation of the client counter when clients connect to the WebSocket endpoint:")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# tests/test_app.py")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test_client_count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("client"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" client"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/client-count"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"count"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" client"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("websocket_connect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/conversation"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" client"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/client-count"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"count"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" client"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/client-count"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"count"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Run these tests using:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("pytest\n")])])]),s("p",[t._v("And, well, guess what?")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),t._v(" session starts "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\nplatform darwin -- Python 3.7.2, pytest-4.3.1, py-1.8.0, pluggy-0.9.0\nrootdir: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("., inifile: pytest.ini\ncollected 2 items\n\ntest_app.py "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("                                         "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("100%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" 2 passed "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" 0.08 seconds "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("\n")])])]),s("p",[t._v("Tests pass! ✅🎉")]),t._v(" "),s("h2",{attrs:{id:"wrapping-up"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wrapping-up","aria-hidden":"true"}},[t._v("#")]),t._v(" Wrapping up")]),t._v(" "),s("p",[t._v("If you've made it so far — congratulations! You've just built a "),s("strong",[t._v("chatbot server")]),t._v(" powered by WebSocket, "),s("a",{attrs:{href:"https://github.com/gunthercox/ChatterBot",target:"_blank",rel:"noopener noreferrer"}},[t._v("ChatterBot"),s("OutboundLink")],1),t._v(" and Bocadillo.")]),t._v(" "),s("p",[t._v("Together, we've seen how to:")]),t._v(" "),s("ul",[s("li",[t._v("Setup a project using the "),s("a",{attrs:{href:"https://github.com/bocadilloproject/bocadillo-cli",target:"_blank",rel:"noopener noreferrer"}},[t._v("Bocadillo CLI"),s("OutboundLink")],1),t._v(" and edit its contents.")]),t._v(" "),s("li",[t._v("Write WebSocket and HTTP endpoints.")]),t._v(" "),s("li",[t._v("Use providers to decouple resources from their consumers.")]),t._v(" "),s("li",[t._v("Test WebSocket and HTTP endpoints using pytest and Bocadillo's testing helpers.")])]),t._v(" "),s("p",[t._v("The complete code for this tutorial is available on the GitHub repo: "),s("a",{attrs:{href:"https://github.com/bocadilloproject/bocadillo/blob/master/docs/getting-started/tutorial/",target:"_blank",rel:"noopener noreferrer"}},[t._v("get the code"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"next-steps"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#next-steps","aria-hidden":"true"}},[t._v("#")]),t._v(" Next steps")]),t._v(" "),s("p",[t._v("Obviously, we've only scratched the surface of what you can do with Bocadillo. The goal of this tutorial was to take you through the steps of building your First Meaningful Application.")]),t._v(" "),s("p",[t._v("You can iterate upon this chatbot server we've built together very easily. We'd be happy to see what you come up with!")]),t._v(" "),s("p",[t._v("Want to challenge yourself? Here are a few ideas:")]),t._v(" "),s("ul",[s("li",[t._v("Add a home page rendered with "),s("router-link",{attrs:{to:"/guide/templates.html"}},[t._v("templates")]),t._v(". The web browser should connect to the chatbot server via a JavaScript program. You'll probably also need to serve "),s("router-link",{attrs:{to:"/guide/static-files.html"}},[t._v("static files")]),t._v(" to achieve this.")],1),t._v(" "),s("li",[s("a",{attrs:{href:"https://chatterbot.readthedocs.io/en/stable/training.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Train Diego"),s("OutboundLink")],1),t._v(' to answers questions like "How many people are you talking to currently?"')]),t._v(" "),s("li",[t._v("Currently, all clients talk to the same instance of Diego. Yet, it would be nice if each client had their own Diego to ensure a bespoke conversation. You may want to investigate "),s("router-link",{attrs:{to:"/guide/sessions.html"}},[t._v("cookie-based sessions")]),t._v(" and "),s("router-link",{attrs:{to:"/guide/providers.html#factory-providers"}},[t._v("factory providers")]),t._v(" to implement this behavior.")],1)]),t._v(" "),s("p",[t._v("You're now about the dive into the details of the framework. Have fun working with Bocadillo! 🥪")])])},[],!1,null,null,null);e.default=n.exports}}]);