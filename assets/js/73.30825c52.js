(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{451:function(t,a,s){"use strict";s.r(a);var e=s(6),n=Object(e.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"json-validation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#json-validation","aria-hidden":"true"}},[t._v("#")]),t._v(" JSON validation")]),t._v(" "),s("p",[t._v("Bocadillo has built-in support for JSON data validation within views using "),s("a",{attrs:{href:"https://www.encode.io/typesystem/",target:"_blank",rel:"noopener noreferrer"}},[t._v("TypeSystem"),s("OutboundLink")],1),t._v(", a data validation library.")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),s("p",[t._v("If you're looking to validate data before saving it to a database, see "),s("router-link",{attrs:{to:"/how-to/orm.html#data-validation"}},[t._v("Data validation (ORM)")]),t._v(". If you are looking to validate arbitrary JSON objects, read on!")],1)]),t._v(" "),s("h2",{attrs:{id:"how-it-works"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#how-it-works","aria-hidden":"true"}},[t._v("#")]),t._v(" How it works")]),t._v(" "),s("p",[t._v("JSON data validation is implemented by registering an "),s("router-link",{attrs:{to:"/guide/errors.html"}},[t._v("error handler")]),t._v(" for the "),s("code",[t._v("typesystem.ValidationError")]),t._v(" exception.")],1),t._v(" "),s("p",[t._v("Thanks to this, you can transparently use all the features of TypeSystem and "),s("strong",[t._v("let validation fail")]),t._v(" within views: Bocadillo will format and send a "),s("code",[t._v("400 Bad Request")]),t._v(" error response for you.")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",[t._v("TypeSystem comes installed with Bocadillo, and this feature is enabled by default, so you can use it right out of the box. ðŸŽ‰")])]),t._v(" "),s("h2",{attrs:{id:"example"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example","aria-hidden":"true"}},[t._v("#")]),t._v(" Example")]),t._v(" "),s("p",[t._v("Consider a "),s("code",[t._v("todos")]),t._v(" application.")]),t._v(" "),s("ol",[s("li",[t._v("In "),s("code",[t._v("models.py")]),t._v(", we define a "),s("code",[t._v("Todo")]),t._v(" data schema.")])]),t._v(" "),s("div",{staticClass:"language-py extra-class"},[s("pre",{pre:!0,attrs:{class:"language-py"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" typesystem\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Todo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("typesystem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Schema"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    title "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" typesystem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("max_length"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    done "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" typesystem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Boolean"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("In "),s("code",[t._v("app.py")]),t._v(", we validate the JSON payload with the "),s("code",[t._v("Todo")]),t._v(" schema and then create a todo item:")])]),t._v(" "),s("div",{staticClass:"language-py extra-class"},[s("pre",{pre:!0,attrs:{class:"language-py"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# todos/app.py")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" bocadillo "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" App\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("models "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Todo\n\napp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" App"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n@app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("route"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/todos"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TodoList")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# NOTE: this may raise a `ValidationError` if the JSON")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# payload is invalid.")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# No need to try/except: the error handler will process")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# the exception for us!")]),t._v("\n        todo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Todo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("validate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# TODO: store todo item.")]),t._v("\n\n        res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("json "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("dict")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("todo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status_code "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("201")]),t._v("\n")])])]),s("p",[t._v("Let's try it out:")]),t._v(" "),s("ol",[s("li",[t._v("Run the app using "),s("code",[t._v("$ uvicorn todos.asgi:app")]),t._v(".")]),t._v(" "),s("li",[t._v("Make a request with a valid JSON payload â€” everything should be fine:")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" \\\n  -X POST \\\n  -d "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{"title": "Make breakfast"}\'')]),t._v(" \\\n  http://localhost:8000/todos\n")])])]),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"title"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Make breakfast"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"done"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("Send an invalid payload instead (e.g. title too long) â€” Bocadillo should automatically return an explicit error response:")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" \\\n  -X POST \\\n  -d "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{"title": "Buy cornflakes at the store and make breakfast"}\'')]),t._v(" \\\n  http://localhost:8000/todos\n")])])]),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"error"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"400 Bad Request"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"status"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"detail"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"title"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Must have no more than 20 characters."')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("This is a fairly basic example, but you can read the "),s("a",{attrs:{href:"https://www.encode.io/typesystem/",target:"_blank",rel:"noopener noreferrer"}},[t._v("TypeSystem documentation"),s("OutboundLink")],1),t._v(" to learn about more complex validation techniques.")]),t._v(" "),s("h2",{attrs:{id:"disabling-validation-error-handling"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#disabling-validation-error-handling","aria-hidden":"true"}},[t._v("#")]),t._v(" Disabling validation error handling")]),t._v(" "),s("p",[t._v("If you wish to disable the "),s("code",[t._v("ValidationError")]),t._v(" error handler, use the "),s("code",[t._v("HANDLE_TYPESYSTEM_VALIDATION_ERROR")]),t._v(" setting:")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# myproject/settings.py")]),t._v("\nHANDLE_TYPESYSTEM_VALIDATION_ERROR "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),t._v("\n")])])]),s("p",[t._v("You would then have to handle "),s("code",[t._v("typesystem.ValidationError")]),t._v(" yourself, or implement your own error handlers in case you want to use a different data validation library.")])])},[],!1,null,null,null);a.default=n.exports}}]);